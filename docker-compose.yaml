version: '3.9'

services:
  postgres:
    image: postgres:13.2-alpine
    container_name: postgres
    restart: on-failure
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=merch
      - POSTGRES_PASSWORD=merch
      - POSTGRES_DB=my_office
      - POSTGRES_DB_SCHEMA=workspaces
    volumes:
      - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
      - aplication_postgres_data:/var/lib/postgresql/data
    networks:
      - local
      - docker-elk_elk

  mongo:
    image: mongo
    container_name: mongo-local
    restart: on-failure
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: merch
      MONGO_INITDB_ROOT_PASSWORD: merch
      MONGO_INITDB_DATABASE: equipment
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - local
      - docker-elk_elk

  employee-api:
    build: business/employee-api
    image: employee-api
    ports:
      - "8085:8085"
    environment:
      - CONFIG_URL=config-server
      - EUREKA_URL=eureka-server
      - POSTGRES=postgres
    depends_on:
      - config-server
      - eureka-server
    networks:
      - local
      - docker-elk_elk

  workspaces-api:
    build: business/workspaces-api
    image: workspaces-api
    restart: always
    ports:
      - "8081:8081"
    environment:
      - CONFIG_URL=config-server
      - EUREKA_URL=eureka-server
      - POSTGRES=postgres
      - LOGSTASH_URL=logstash
    depends_on:
      - config-server
      - eureka-server
    networks:
      - local
      - docker-elk_elk

  eureka-server:
    build: infra/eureka-server
    image: eureka-server
    container_name: eureka-server
    restart: on-failure
    ports:
      - "8282:8282"
    environment:
      - CONFIG_URL=config-server
      - EUREKA_URL=eureka-server
#    depends_on:
#      config-server:
#        condition: service_healthy
    networks:
      - local
      - docker-elk_elk

  config-server:
    build: infra/config
    image: config-server
    container_name: config-server
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://config-server:8888/actuator/health" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3
    ports:
      - "8888:8888"
    environment:
      - CONFIG_URL=config-server
      - EUREKA_URL=eureka-server
    depends_on:
      - postgres
      - mongo
    networks:
      - local
      - docker-elk_elk

  api-gateway:
    build: infra/api-gateway
    image: api-gateway
    ports:
      - "8080:8080"
    environment:
      - CONFIG_URL=config-server
      - EUREKA_URL=eureka-server
      - EMPLOYEE_API=employee-api
      - WORKSPACES_API=workspaces-api
    depends_on:
      - config-server
      - eureka-server
      - employee-api
      - workspaces-api
    networks:
      - local
      - docker-elk_elk

volumes:
  aplication_postgres_data:
    driver: local

networks:
  local:
    driver: bridge
  docker-elk_elk:
    external: true